
>>blank = ""
*settings
*question: {blank}
	Learn
		>>state = "learn"
	Practice
		>>state = "practice"

*question: What do you want? "Huh"? 33 birds?
	 Winter Birds
		>>birdCat = "winter"

--bird group collections
>>winterBirds = ["Tufted Titmouse", ab 2 3sd "Red-breasted Nuthatch", "Chickadee", "Junco"]

 >>birdGroup = []

--should not register
 "string"

 *if: done = 1
	>>doSomething = "yes"
*while: count <= 34

*if: birdCat = "winter"
	>>birdGroup = winterBirds

*if: state = "learn"
	*question: {blank}
		*answers: birdGroup
		*save: bird

*question: {blank}
	Calls
		>>calls = "play"
	Songs
		>>songs = "play"

--this should fail to be matched with syntax
>>birdGroup

*label: practicing
*if: state = "practice"
	>>birdGroup.shuffle
	>>practiceBird = birdGroup[1]

--Test ways to randomize whether call1 or call2, etc. are played. Thought:
-->>randomizer = [1,2,3,4]
-->>randomizer.shuffle
-->>callNB = randomizer[1]
-->>calls = "play{randomizer[1]}"

--Could, later, try to set it up such that the size of the `randomizer` collection was based on the number of calls available for each bird.
*label: replay
*program: birdArchive

*if: state = "practice"
	>>birdGroup.shuffle
	*question: What bird?
		*answers: {birdGroup}
		*save: answer
	*if: answer = practiceBird
		Right!
		*goto: practicing
	*if: not answer = practiceBird
		Nope!
		*goto: replay
