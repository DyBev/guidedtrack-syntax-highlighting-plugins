{
  "name": "GuidedTrack",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_definition"
      }
    },
    "_definition": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "variable_definition"
        },
        {
          "type": "SYMBOL",
          "name": "_function_definition"
        },
        {
          "type": "SYMBOL",
          "name": "_keyword_definition"
        }
      ]
    },
    "_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_indent"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_definition"
          }
        },
        {
          "type": "SYMBOL",
          "name": "_dedent"
        }
      ]
    },
    "_function_definition": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "if_function_definition"
        },
        {
          "type": "SYMBOL",
          "name": "while_function_definition"
        }
      ]
    },
    "if_function_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "*if:"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "SYMBOL",
                "name": "_operator"
              }
            ]
          }
        }
      ]
    },
    "while_function_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "*while:"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "SYMBOL",
                "name": "_operator"
              }
            ]
          }
        }
      ]
    },
    "variable_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": ">>"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_expression"
          }
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "_type"
        }
      ]
    },
    "_keyword_definition": {
      "type": "CHOICE",
      "members": []
    },
    "_type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "string_type"
        },
        {
          "type": "SYMBOL",
          "name": "array_type"
        },
        {
          "type": "SYMBOL",
          "name": "dictionary_type"
        }
      ]
    },
    "string_type": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_expression"
          }
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "array_type": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_type"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "comma_divider"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "comma_divider": {
      "type": "STRING",
      "value": ","
    },
    "dictionary_type": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "dictionary_pair"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "comma_divider"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "dictionary_pair": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_type"
        },
        {
          "type": "STRING",
          "value": "->"
        },
        {
          "type": "SYMBOL",
          "name": "_type"
        }
      ]
    },
    "_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "number"
        }
      ]
    },
    "_operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "in_operator"
        },
        {
          "type": "SYMBOL",
          "name": "equal_operator"
        },
        {
          "type": "SYMBOL",
          "name": "moreThan_operator"
        },
        {
          "type": "SYMBOL",
          "name": "lessThan_operator"
        }
      ]
    },
    "lessThan_operator": {
      "type": "STRING",
      "value": "<"
    },
    "moreThan_operator": {
      "type": "STRING",
      "value": ">"
    },
    "equal_operator": {
      "type": "STRING",
      "value": "="
    },
    "in_operator": {
      "type": "STRING",
      "value": "in"
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[A-Za-z_]+"
    },
    "number": {
      "type": "PATTERN",
      "value": "\\d+"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [
    {
      "type": "SYMBOL",
      "name": "_indent"
    },
    {
      "type": "SYMBOL",
      "name": "_dedent"
    }
  ],
  "inline": [],
  "supertypes": []
}

